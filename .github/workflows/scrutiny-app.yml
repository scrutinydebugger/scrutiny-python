name: Build Scrutiny App

on:
  workflow_dispatch :
  push:
    tags:
        - 'v*'

jobs:
  build-ubuntu:
    if: false
    runs-on: ubuntu-22.04
    steps:
      # Check-out repository
      - name: Checkout Repo
        uses: actions/checkout@v4

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' 

      # Fetch all the build dependencies
      - name: Install dependencies
        run: pip install -e .[build]

      # Launch Nuitka
      - name: Nuitka build
        run: ./scripts/nuitka_build.sh
        shell: bash

      # Create a Debian package
      - name: Create package
        run: ./scripts/make_debian_package.sh
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Debian package ${{ github.ref_name }}
          path: ./nuitka_build/installer/*.deb


  build-mac-os:
    runs-on: macos-latest
    steps:
      # Check-out repository
      - name: Checkout Repo
        uses: actions/checkout@v4

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' 

      # Fetch all the build dependencies
      - name: Install dependencies
        run: pip install -e .[build]

      # Launch Nuitka
      - name: Nuitka build
        run: ./scripts/nuitka_build.sh
        shell: bash

      # Sign the scrutiny executable
      - name: Sign Executable
        uses: sslcom/esigner-codesign@v1.3.1
        with:
          command: sign
          username: ${{ secrets.CODESIGN_USERNAME }}
          password: ${{ secrets.CODESIGN_PASSWORD }}
          credential_id: ${{ secrets.CODESIGN_CREDENTIAL_ID }}
          totp_secret: ${{ secrets.CODESIGN_TOTP_SECRET }}
          file_path: ./nuitka_build/scrutiny.app
          override: true
          clean_logs: true

                # Create a DMG file
      - name: Create package
        run: ./scripts/make_macos_dmg.sh
        shell: bash

      # Get the name of the installer generated by make_windows_installer.sh
      - name: Get DMG Name
        run: echo "DMG_NAME=$(./scripts/make_macos_dmg_name.sh)" >> $GITHUB_ENV
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Mac OS app ${{ github.ref_name }}
          path: ./nuitka_build/installer/${{ env.DMG_NAME }}.dmg


  build-windows:
    if: false
    runs-on: windows-latest
    steps:
      # Check-out repository
      - name: Checkout Repo
        uses: actions/checkout@v4

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' 

      # Fetch all the build dependencies
      - name: Install dependencies
        run: pip install -e .[build]

      # Launch Nuitka
      - name: Nuitka build
        run: ./scripts/nuitka_build.sh
        shell: bash
      
      # Sign the scrutiny executable
      - name: Sign Executable
        uses: sslcom/esigner-codesign@v1.3.1
        with:
          command: sign
          username: ${{ secrets.CODESIGN_USERNAME }}
          password: ${{ secrets.CODESIGN_PASSWORD }}
          credential_id: ${{ secrets.CODESIGN_CREDENTIAL_ID }}
          totp_secret: ${{ secrets.CODESIGN_TOTP_SECRET }}
          file_path: ./nuitka_build/scrutiny.dist/scrutiny.exe
          override: true
          clean_logs: true
      
      # Launch InnoSetup
      - name: InnoSetup packaging
        run: ./scripts/make_windows_installer.sh
        shell: bash
    
      # Get the name of the installer generated by make_windows_installer.sh
      - name: Get Installer Name
        run: echo "INSTALLER_NAME=$(./scripts/make_windows_installer_name.sh)" >> $GITHUB_ENV
        shell: bash
      
      # Sign the installer
      - name: Sign Installer
        uses: sslcom/esigner-codesign@v1.3.1
        with:
          command: sign
          username: ${{ secrets.CODESIGN_USERNAME }}
          password: ${{ secrets.CODESIGN_PASSWORD }}
          credential_id: ${{ secrets.CODESIGN_CREDENTIAL_ID }}
          totp_secret: ${{ secrets.CODESIGN_TOTP_SECRET }}
          file_path: ./nuitka_build/installer/${{ env.INSTALLER_NAME }}.exe
          override: true
          clean_logs: true
      
      # Upload to github
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows installer ${{ github.ref_name }}
          path: ./nuitka_build/installer/${{ env.INSTALLER_NAME }}.exe
